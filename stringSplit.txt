
/************************************************************************/
/* 
 说明：查找字符串中第一次出现分隔符的位置
 参数：
const string& str 待查找的字符串
const vector<string>& delimiterList为分隔符列表
int* indexOfDelimiter 为第一次出现的分隔符序号
 返回值：
 第一次出现分隔符的位置，如果没有找到任何一个分隔符，则返回-1
*/
/************************************************************************/
static int findDelimiter(const string& str, const vector<string>& delimiterList, int* indexOfDelimiter = NULL)
{
	// 获取分隔符的个数
	int num = static_cast<int>(delimiterList.size());
	int iPos = -1;	//定义一个游标
	int index_ = 0;
	for(int i = 0;i < num;i++)
	{
		//依次次查找各分隔符
		int tmp;
		if((tmp = str.find(delimiterList[i])) != -1)
		{
			//如果找到某分隔符
			if(-1 == iPos || tmp < iPos)
			{
				index_ = i;
				iPos = tmp;
			}
		}
	}

	if (indexOfDelimiter)
	{
		*indexOfDelimiter = index_;
	}
	//返回第一个分隔符的位置，，如果没有找到任何一个分隔符，则返回-1
	return iPos;
}

/************************************************************************/
/* 
 说明：用多个分割符拆分字符串
 参数：
const string& input 待拆分字符串
const vector<string>& delimiterList 为分隔符列表
 输出：vector<string>& results，存放拆分结果
*/
/************************************************************************/
static void splitString(const string& input, 
	const vector<string>& delimiterList, vector<string>& results)
{
	results.clear();

	int iPos=-1;   //定义一个游标
	int tmpPos = -1;

	string str = input;
	//删除字符串首的分隔符
	for (int i = 0;i < (int)delimiterList.size();++i)
	{
		string delimiter = delimiterList[i];
		int pos;
		while((pos = str.find (delimiter, 0)) == 0)
		{
			str = str.substr( pos+delimiter.size(), str.size() ); 
		}
	}

	while((iPos=findDelimiter(str, delimiterList))!=-1) //找到一个delimiter，索引时从0开始的
	{
		results.push_back(str.substr(0, iPos));//获取一个元素，并插入数组

		//删除该元素
		//str.erase(0,iPos+1);
		str = str.substr(iPos+1, str.size());

		//删除多余的分隔符
		int indexOfDelimiter;
		while(findDelimiter(str, delimiterList, &indexOfDelimiter) == 0)
		{
			// 如果字符串首存在分隔符
			// 则删除该分隔符
			str = str.substr(delimiterList[indexOfDelimiter].size(),  str.size());
		}
	}
	if(!str.empty())
		// 则将最后的一个元素加入数组
		results.push_back(str);
	}
}